var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = LibAwsChecksums","category":"page"},{"location":"#LibAwsChecksums","page":"Home","title":"LibAwsChecksums","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LibAwsChecksums.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [LibAwsChecksums]","category":"page"},{"location":"#LibAwsChecksums.aws_checksums_crc32-Tuple{Any, Any, Any}","page":"Home","title":"LibAwsChecksums.aws_checksums_crc32","text":"aws_checksums_crc32(input, length, previousCrc32)\n\nThe entry point function to perform a CRC32 (Ethernet, gzip) computation. Selects a suitable implementation based on hardware capabilities. Pass 0 in the previousCrc32 parameter as an initial value unless continuing to update a running crc in a subsequent call.\n\nPrototype\n\nuint32_t aws_checksums_crc32(const uint8_t *input, int length, uint32_t previousCrc32);\n\n\n\n\n\n","category":"method"},{"location":"#LibAwsChecksums.aws_checksums_crc32c-Tuple{Any, Any, Any}","page":"Home","title":"LibAwsChecksums.aws_checksums_crc32c","text":"aws_checksums_crc32c(input, length, previousCrc32)\n\nThe entry point function to perform a Castagnoli CRC32c (iSCSI) computation. Selects a suitable implementation based on hardware capabilities. Pass 0 in the previousCrc32 parameter as an initial value unless continuing to update a running crc in a subsequent call.\n\nPrototype\n\nuint32_t aws_checksums_crc32c(const uint8_t *input, int length, uint32_t previousCrc32);\n\n\n\n\n\n","category":"method"}]
}
